name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'telegram_bot_service/**'
      - '.github/workflows/gcp-deploy.yml'
      - '.github/workflows/docker-build.yml'  # Добавьте эту строку

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r telegram_bot_service/requirements.txt
    
    - name: Run tests
      run: |
        cd telegram_bot_service
        pytest tests/

  deploy:
    needs: test  # Добавьте зависимость от тестов
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1  # Обновленная версия
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    - name: Authorize Docker
      run: gcloud auth configure-docker

    - name: Build Docker Image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/telegram-bot-service:${{ github.sha }} ./telegram_bot_service

    - name: Push to Container Registry
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/telegram-bot-service:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy telegram-bot-service \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/telegram-bot-service:${{ github.sha }} \
          --platform managed \
          --region ${{ secrets.GCP_REGION }} \
          --allow-unauthenticated \
          --set-env-vars TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}