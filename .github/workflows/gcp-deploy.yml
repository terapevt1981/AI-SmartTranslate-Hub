name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'telegram_bot_service/**'
      - 'translation_service/**'
      - 'transport_service/**'
      - '.github/workflows/gcp-deploy.yml'
      - '.github/workflows/docker-build.yml'

  workflow_dispatch:
    inputs:
      service:
        description: 'Service to deploy'
        required: true
        type: choice
        options:
          - telegram_bot_service
          - translation_service
          - transport_service

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - telegram_bot_service
          - translation_service
          - transport_service

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r ${{ matrix.service }}/requirements.txt
    
    - name: Run tests
      run: |
        cd ${{ matrix.service }}
        if [ -d "tests" ]; then
          pytest tests/
        else
          echo "No tests directory found for ${{ matrix.service }}"
        fi

  deploy:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - telegram_bot_service
          - translation_service
          - transport_service

    steps:
    - uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker
      run: |
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ matrix.service }}/service:${{ github.sha }} ./${{ matrix.service }}

    - name: Push to Artifact Registry
      run: |
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ matrix.service }}/service:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        SERVICE_NAME=$(echo "${{ matrix.service }}" | sed 's/_/-/g')
        
        case "${{ matrix.service }}" in
          telegram_bot_service)
            ENV_VARS="TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}"
            ;;
          translation_service)
            ENV_VARS="OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}"
            ;;
          transport_service)
            ENV_VARS=""
            ;;
        esac

        gcloud run deploy $SERVICE_NAME \
          --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ matrix.service }}/service:${{ github.sha }} \
          --platform managed \
          --region ${{ secrets.GCP_REGION }} \
          --allow-unauthenticated \
          ${ENV_VARS:+ --set-env-vars $ENV_VARS}